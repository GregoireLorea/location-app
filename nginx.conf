events {
    worker_connections 1024;
}

http {
    upstream location-app {
        server location-app:3000;
    }

    # Configuration pour HTTP (redirection vers HTTPS)
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # Configuration HTTPS
    server {
        listen 443 ssl http2;
        server_name localhost;

        # Certificats SSL (Ã  configurer selon votre setup)
        # ssl_certificate /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Configuration SSL moderne
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Gestion des uploads de fichiers
        client_max_body_size 10M;

        # Proxy vers l'application Node.js
        location / {
            proxy_pass http://location-app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Cache pour les fichiers statiques
        location /uploads/ {
            proxy_pass http://location-app;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://location-app;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
